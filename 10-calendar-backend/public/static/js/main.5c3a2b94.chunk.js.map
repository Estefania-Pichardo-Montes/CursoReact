{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","cheking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","preparteEvent","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","console","log","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c3a2b94.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n\n    eventSetActive: '[event] Set Active',\n    eventLogout:'[event] Logout event',\n\n    eventStartAddNew:'[events] start Add New',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded:'[event] Events Loaded',\n\n    authCheckingFinish: '[auth] Finish checking Login State',\n    authStartLogin:'[auth] Start Login',\n    authLogin:'[auth] Login',\n    authStartRegister:'[auth] Start Register',\n    authStartTokenRenew:'[auth] Start Token Renew',\n    authLogout:'[auth] Logout'\n\n\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import { types } from '../types/types';\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\n// {\n//     id: 'sadasfsdgfsds',\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(),\n//     end: moment().add( 2, 'hours' ).toDate(),\n//     bgcolor: '#fafafa',\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name: 'Fernando'\n//     }\n// }\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n        case types.eventLoaded:\n            return{\n                ...state,\n                events:[...action.payload]\n            }\n        case types.eventLogout:\n            return{\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from \"../types/types\";\r\n\r\nconst initialState={\r\n    cheking:true,\r\n    //uid:null,\r\n    //name:null\r\n}\r\n\r\nexport const authReducer=(state=initialState, action)=>{\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                cheking:false,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                cheking:false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return{\r\n                cheking:false\r\n            }\r\n   \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n    \n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","\r\nconst baseUrl=process.env.REACT_APP_API_URL;\r\nconst fetchSinToken=(endpoint,data,method='GET')=>{\r\n    const url=`${baseUrl}/${endpoint}`;\r\n\r\n    if(method==='GET'){\r\n        return fetch(url);\r\n    }\r\n    else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body:JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken=(endpoint,data,method='GET')=>{\r\n    const url=`${baseUrl}/${endpoint}`;\r\n    const token=localStorage.getItem('token')||'';\r\n\r\n    if(method==='GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token':token\r\n            }\r\n        });\r\n    }\r\n    else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token':token\r\n            },\r\n            body:JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport{\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from 'moment';\r\n\r\n\r\nexport const preparteEvent=(events=[])=>{\r\n\r\n    return events.map(\r\n        (e)=>({\r\n            ...e,\r\n            //cambiamos de tipo string a tipo date\r\n            end:moment(e.end).toDate(),\r\n            start:moment(e.start).toDate(),\r\n        })\r\n    );\r\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { preparteEvent } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew=(event)=>{\n    return async(dispatch, getState)=>{\n\n        const {uid, name}=getState().auth;\n\n        try{\n            const resp= await fetchConToken('events', event, 'POST');\n            const body= await resp.json();\n\n            if(body.ok){\n                event.id=body.evento.id;\n                event.user={\n                    _id:uid,\n                    name:name\n                }\n                console.log(event);\n                dispatch(eventAddNew(event));\n            }\n        }\n        catch(error){\n            console.log(error);\n        }\n        \n        \n    }\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\nexport const eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartUpdated=(event)=>{\n    return async(dispatch)=>{\n        try{\n\n            // console.log(event);\n            const resp= await fetchConToken(`events/${event.id}`, event, 'PUT');\n\n            const body= await resp.json();\n\n            if(body.ok){\n                dispatch(eventUpdated(event));\n            }\n            else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n        }catch(error){\n            console.log(error);\n        }\n    }\n}\nexport const eventStartDelete=()=>{\n    return async(dispatch, getState)=>{\n        const {id}=getState().calendar.activeEvent;\n        \n        try{\n\n            // console.log(event);\n            const resp= await fetchConToken(`events/${id}`, {}, 'DELETE');\n\n            const body= await resp.json();\n\n            if(body.ok){\n                dispatch(eventDeleted());\n            }\n            else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n        }catch(error){\n            console.log(error);\n        }\n    }\n}\n\n const eventDeleted = () => ({ type: types.eventDeleted });\n\nexport const eventStartLoading=()=>{\n    \n    return async(dispatch)=>{\n        try{\n\n            const resp= await fetchConToken('events');\n            const body= await resp.json();\n                        \n            const events=preparteEvent(body.eventos);\n            //console.log(events);\n            dispatch(eventLoaded(events));\n        }\n        catch(error){\n            console.log(error);\n        }\n    }\n}\n\nconst eventLoaded=(events)=>({\n    type: types.eventLoaded,\n    payload:events\n})\n\nexport const eventLogout=()=>({\n    type:types.eventLogout\n})\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin=(email, password)=>{\r\n    return async(dispatch)=>{\r\n        const resp = await fetchSinToken('auth', {email,password},'POST');\r\n        const body= await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n\r\n            dispatch(login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startRegister=(email, password, name)=>{\r\n    return async(dispatch)=>{\r\n\r\n        const resp = await fetchSinToken('auth/new', {email,password,name},'POST');\r\n        const body= await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n\r\n            dispatch(login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking=()=>{\r\n    return async(dispatch)=>{\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body= await resp.json();\r\n        \r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n\r\n            dispatch(login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }))\r\n        }else{\r\n           \r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish=()=>({type:types.authCheckingFinish});\r\n\r\nconst login=(user)=>({\r\n    type:types.authLogin,\r\n    payload:user\r\n});\r\n\r\n//Hacer el logout\r\nexport const startLogout=()=>{\r\n    return(dispatch)=>{\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout=()=>({type:types.authLogout});","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const[formLoginValues, handleLoginInputChange]=useForm({\n        lEmail:'fanny@gmail.com',\n        lPassword:'123456'\n    });\n\n    \n\n    const[formRegisterValues, handleRegisterInputChange]=useForm({\n        rName:'Estefania Pichardo',\n        rEmail:'fannyPichardo@gmail.com',\n        rPassword1:'123456',\n        rPassword2:'123456'\n    });\n\n    const {rName, rEmail, rPassword1, rPassword2}=formRegisterValues;\n\n    \n    const {lEmail, lPassword }=formLoginValues;\n\n    const handleLogin=(e)=>{\n        e.preventDefault();\n        dispatch(startLogin(lEmail, lPassword));\n        \n    }\n\n    const handleRegister=(e)=>{\n        e.preventDefault();\n\n        if(rPassword1!==rPassword2){\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error')\n        }\n        console.log('avr');\n        dispatch(startRegister(rEmail, rPassword1, rName));\n    }\n\n\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={lEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={lPassword}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={rName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={rEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword1\"\n                                value={rPassword1}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rPassword2\"\n                                value={rPassword2}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n    const {name} = useSelector(state => state.auth);\n    \n    const dispatch = useDispatch();\n\n    const handleLogout=()=>{\n        dispatch(startLogout());\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                {name}\n            </span>\n            \n            <button className=\"btn btn-outline-danger\"\n                onClick={handleLogout}\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdated } from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventStartUpdated( formValues ) )\n        } else {\n            dispatch( eventStartAddNew(formValues) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector( state => state.calendar );\n    const { uid } = useSelector( state => state.auth );\n\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n    useEffect(() => {\n        dispatch(eventStartLoading());\n    }, [dispatch]);\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch( eventClearActiveEvent() );\n    }\n\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n        \n        const style = {\n            backgroundColor:(uid===event.user._id)? '#367CF7':'#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n            \n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props)=>(\r\n                (isAuthenticated)\r\n                ? <Component {...props}/>\r\n                :(<Redirect to=\"/login\"/>)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes={\r\n    isAuthenticated:PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props)=>(\r\n                (isAuthenticated)\r\n                ?(<Redirect to=\"/\"/>) \r\n                :<Component {...props}/>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes={\r\n    isAuthenticated:PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,  \n    Redirect\n  } from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const {cheking, uid} = useSelector(state => state.auth);\n\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch]);\n    \n    if(cheking){\n        return (<h5>Espere...</h5>);\n    }\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute \n                        exact \n                        path=\"/login\" \n                        component={ LoginScreen } \n                        isAuthenticated={!!uid}\n                    />      \n                    <PrivateRoute \n                        exact \n                        path=\"/\" \n                        component={ CalendarScreen } \n                        isAuthenticated={!!uid}\n\n                    />\n\n                    <Redirect to=\"/\" />   \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}